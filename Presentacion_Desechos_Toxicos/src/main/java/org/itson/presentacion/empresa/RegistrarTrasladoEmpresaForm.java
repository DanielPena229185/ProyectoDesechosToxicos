
package org.itson.presentacion.empresa;

import com.dominio.EmpresaTransportista;
import com.dominio.Estado;
import com.dominio.Traslado;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.itson.excepciones.NegocioException;
import org.itson.excepciones.PresentacionException;
import org.itson.implementacion.FachadaNegocio;
import org.itson.interfaces.INegocio;

/**
 * Descripción de la clase:Registro de traslado de empresa
 *
 * @author Aracely Campa Quintana ID: 233215
 * @author Edgar Emir Borbon Jimenez ID:
 * @author Oscar Minjarez Zavala ID: 231503
 * @author Daniel Armando Peña Garcia ID:229185
 */
public class RegistrarTrasladoEmpresaForm extends javax.swing.JFrame {
    /**
     * Objeto negocio
     */
    private final INegocio negocio;
    /**
     * La instancia única del formulario de registro de traslado de la empresa
     */
    private static RegistrarTrasladoEmpresaForm form;
    /**
     * empresa transportista
     */
    private EmpresaTransportista empresaTransportista;
    /**
     * lista de traslados
     */
    private List<Traslado> traslados;
    
    /**
     * Creates new form RegistrarTrasladoEmpresaForm
     */
    private RegistrarTrasladoEmpresaForm() {
        this.negocio = new FachadaNegocio();
        initComponents();
    }
/**
 * Abre el formulario de selección de vehículos.
 * 
 * Este método crea una instancia de la clase {@link SeleccionarVehiculosForm} utilizando el patrón Singleton y realiza algunas configuraciones antes de iniciar los componentes.
 * 
 * Se establece la empresa transportista y el traslado seleccionado en el formulario de selección de vehículos.
 * 
 * @see SeleccionarVehiculosForm
 * @see SeleccionarVehiculosForm#getInstance()
 * @see SeleccionarVehiculosForm#setEmpresaTransportista(EmpresaTransportista)
 * @see SeleccionarVehiculosForm#setTraslado(Traslado)
 * @see SeleccionarVehiculosForm#iniciarComponentes()
 */
    private void abrirSeleccionarVehiculosForm() {
        SeleccionarVehiculosForm seleccionarVehiculo = null;
        seleccionarVehiculo = SeleccionarVehiculosForm.getInstance();
        seleccionarVehiculo.setEmpresaTransportista(this.empresaTransportista);
        seleccionarVehiculo.setTraslado(this.obtenerTrasladoSeleccionado());
        seleccionarVehiculo.iniciarComponentes();
    }
            
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaTraslados = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        registrarBtn = new javax.swing.JButton();
        lblNombreEmpresa = new javax.swing.JLabel();
        btnRegresar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        tablaTraslados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Fecha Solicitada", "Residuo", "Cantidad", "Productor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaTraslados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaTrasladosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaTraslados);

        jLabel1.setText("Registrar Traslado:");

        registrarBtn.setText("Registrar");
        registrarBtn.setEnabled(false);
        registrarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarBtnActionPerformed(evt);
            }
        });

        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(7, 7, 7)
                        .addComponent(lblNombreEmpresa))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnRegresar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(registrarBtn)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblNombreEmpresa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registrarBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRegresar))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

/**
 * Maneja el evento de acción del botón "Registrar".
 *
 * Abre el formulario de selección de vehículos y oculta el formulario actual.
 *
 * @param evt El evento de acción.
 */
    private void registrarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarBtnActionPerformed
        this.abrirSeleccionarVehiculosForm();
        this.setVisible(false);
    }//GEN-LAST:event_registrarBtnActionPerformed
/**
 * Maneja el evento de clic en la tabla de traslados.
 *
 * Habilita el botón de registrar.
 *
 * @param evt El evento de clic del ratón.
 */
    private void tablaTrasladosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaTrasladosMouseClicked
        this.registrarBtn.setEnabled(true);
    }//GEN-LAST:event_tablaTrasladosMouseClicked

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegresarActionPerformed

    public static RegistrarTrasladoEmpresaForm getInstance() {
        if (form == null) {
            form = new RegistrarTrasladoEmpresaForm();
        }
        
        return form;
    }
 /**
 * Inicializa los componentes del formulario.
 *
 * Carga la tabla de traslados, establece el nombre de la empresa transportista y abre la ventana.
 */   
    public void iniciarComponentes() {
        this.cargarTablaTraslados();
        this.lblNombreEmpresa.setText(this.empresaTransportista.getNombre());
        this.abrirVentana();
    }
 /**
 * Establece la empresa transportista para el formulario de registro de traslado de la empresa.
 *
 * @param empresaTransportista La empresa transportista a establecer.
 */
public void setEmpresaTransportista(EmpresaTransportista empresaTransportista) {
    this.empresaTransportista = empresaTransportista;
}

/**
 * Abre la ventana del formulario.
 */
private void abrirVentana() {
    this.setVisible(true);
}

/**
 * Consulta la lista de traslados asignados a la empresa transportista.
 *
 * @return La lista de traslados consultada.
 * @throws PresentacionException Si ocurre un error durante la consulta de los traslados.
 */
private List<Traslado> consultarListaTraslados() throws PresentacionException {
    try {
        this.traslados = this.negocio.consultaTrasladosAsingados(this.empresaTransportista);
        System.out.println(this.traslados.get(0));
        return this.traslados;
    } catch (NegocioException e) {
        throw new PresentacionException(e.getMessage());
    }
}

/**
 * Formatea una fecha en el formato "dd-MM-yyyy".
 *
 * @param fecha La fecha a formatear.
 * @return La fecha formateada como una cadena.
 */
private String formatearFecha(Date fecha) {
    SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
    return sdf.format(fecha);
}

/**
 * Carga los traslados en la tabla de traslados del formulario.
 */
private void cargarTablaTraslados() {
    DefaultTableModel modeloTabla = (DefaultTableModel) this.tablaTraslados.getModel();
    modeloTabla.setNumRows(0);
    
    try {
        this.traslados = this.consultarListaTraslados();
    
        for (Traslado traslado : this.traslados) {
            Object[] fila = {
                    this.formatearFecha(traslado.getSolicitud().getFecha_Solicitada()),
                    traslado.getResiduo().getNombre(),
                    traslado.getResiduo().getCantidad(),
                    traslado.getSolicitud().getProductor().getNombre()
                };

                modeloTabla.addRow(fila);
        }
    } catch (PresentacionException e) {
        JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}

/**
 * Obtiene el traslado seleccionado en la tabla de traslados.
 *
 * @return El traslado seleccionado.
 */
private Traslado obtenerTrasladoSeleccionado() {
    int filaSeleccionada = this.tablaTraslados.getSelectedRow();
    return this.traslados.get(filaSeleccionada);
}

    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblNombreEmpresa;
    private javax.swing.JButton registrarBtn;
    private javax.swing.JTable tablaTraslados;
    // End of variables declaration//GEN-END:variables
}
